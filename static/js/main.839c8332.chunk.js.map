{"version":3,"sources":["Components/ContactForm/contactForm.module.css","Components/ContactListItem/contactList.module.css","Components/Layout/layout.module.css","context/ThemeContext.js","hoc/withThemeContext.js","Components/Layout/Layout.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","Components/Toggler/Toggler.js","App.js","index.js","Components/Filter/filter.module.css","Components/Toggler/toggler.module.css","base.module.css"],"names":["module","exports","themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","state","theme","Provider","value","type","this","config","props","children","Component","Consumer","withThemeContext","WrappedComponent","className","styles","Layout","style","background","color","ContactForm","name","number","handleChange","target","handleSubmit","e","preventDefault","onAddContact","Form","onSubmit","FormLabel","FormInput","onChange","FormButton","ContactListItem","removeContact","contactsListItem","deleteButton","onClick","Filter","visibleSearchContacts","contacts","onRemoveContact","filterForm","length","map","id","key","ContactList","themeSelector","switch","checked","slider","App","filter","addContact","newContact","uuid","findContact","find","contact","alert","prevState","contactId","formFilter","getVisibleContact","toLowerCase","includes","savedÐ¡ontacts","localStorage","getItem","JSON","parse","setItem","stringify","visibleContacts","title","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.839c8332.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"contactForm_Form__U1jA_\",\"FormLabel\":\"contactForm_FormLabel__1FIo9\",\"FormInput\":\"contactForm_FormInput__3BqVg\",\"FormButton\":\"contactForm_FormButton__1WY1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"contactList_contactsListItem__fajA1\",\"deleteButton\":\"contactList_deleteButton__MBEcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__3qluN\"};","import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"#fff\"\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"#333333\"\r\n  }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState(state => ({\r\n      theme: state.theme === \"dark\" ? \"light\" : \"dark\"\r\n    }));\r\n  };\r\n\r\n  state = { theme: \"light\", toggleTheme: this.toggleTheme };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          type: this.state,\r\n          config: themeConfig[this.state.theme]\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\n\r\nconst withThemeContext = WrappedComponent => {\r\n  return function withThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {({ type, config }) => (\r\n          <WrappedComponent\r\n            {...props}\r\n            theme={type.theme}\r\n            config={config}\r\n            toggleTheme={type.toggleTheme}\r\n          />\r\n        )}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nwithThemeContext.propTypes = {\r\n  type: PropTypes.shape({\r\n    theme: PropTypes.string.isRequired,\r\n    toggleTheme: PropTypes.func.isRequired\r\n  }),\r\n  config: PropTypes.shape({\r\n    bodybg: PropTypes.string.isRequired,\r\n    fontColor: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default withThemeContext;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\n\r\nimport styles from \"./layout.module.css\";\r\n\r\nconst Layout = ({ children, config }) => (\r\n  <div\r\n    className={styles.Layout}\r\n    style={{ background: config.bodybg, color: config.fontColor }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nLayout.propTypes = {\r\n  config: PropTypes.shape({\r\n    bodybg: PropTypes.string.isRequired,\r\n    fontColor: PropTypes.string.isRequired\r\n  })\r\n};\r\n\r\nexport default withThemeContext(Layout);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\"\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormLabel}>\r\n          Name\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.FormLabel}>\r\n          Number\r\n          <input\r\n            className={styles.FormInput}\r\n            type=\"name\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button className={styles.FormButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./contactList.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, removeContact }) => (\r\n  <li className={styles.contactsListItem}>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.deleteButton}\r\n      onClick={removeContact}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  removeContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({\r\n  value,\r\n  onChange,\r\n  visibleSearchContacts,\r\n  contacts,\r\n  onRemoveContact\r\n}) => (\r\n  <div className={styles.filterForm}>\r\n    <label className={styles.FormLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.FormInput}\r\n        type=\"name\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </label>\r\n    <ul>\r\n      {contacts.length > 2 &&\r\n        visibleSearchContacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            removeContact={() => onRemoveContact(id)}\r\n          />\r\n        ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  visibleSearchContacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({id, name, number}) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        removeContact={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withThemeContext from \"../../hoc/withThemeContext\";\r\n\r\nimport styles from \"./toggler.module.css\";\r\n\r\nconst Toggler = ({ theme, toggleTheme }) => (\r\n  <div className={styles.themeSelector}>\r\n    <label className={styles.switch}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={theme === \"dark\"}\r\n        onChange={({ target }) => toggleTheme(target.value)}\r\n      />\r\n      <span className={styles.slider}></span>\r\n    </label>\r\n  </div>\r\n);\r\n\r\nToggler.propTypes = {\r\n  theme: PropTypes.string.isRequired,\r\n  toggleTheme: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withThemeContext(Toggler);\r\n","import React, { Component } from \"react\";\r\n\r\nimport uuid from \"uuid/v3\";\r\nimport styles from \"./base.module.css\";\r\n\r\nimport Layout from \"./Components/Layout/Layout\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport Toggler from \"./Components/Toggler/Toggler\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" }\r\n    ],\r\n    filter: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedÐ¡ontacts = localStorage.getItem(\"contacts\");\r\n\r\n    if (savedÐ¡ontacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedÐ¡ontacts)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      number\r\n    };\r\n    const findContact = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n    if (findContact) {\r\n      alert(`${findContact.name} is already consist`);\r\n      return;\r\n    }\r\n    this.setState(prevState => {\r\n      return { contacts: [...prevState.contacts, newContact] };\r\n    });\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId)\r\n      };\r\n    });\r\n  };\r\n\r\n  formFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContact = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContact();\r\n    return (\r\n      <ThemeContext>\r\n        <Layout>\r\n          <Toggler />\r\n          <h1 className={styles.title}>Phone book</h1>\r\n          <ContactForm onAddContact={this.addContact} />\r\n          <h2 className={styles.title}>Contacts</h2>\r\n          <Filter\r\n            value={filter}\r\n            onChange={this.formFilter}\r\n            visibleSearchContacts={visibleContacts}\r\n            contacts={contacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n          <ContactList\r\n            contacts={contacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        </Layout>\r\n      </ThemeContext>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"filter_filterForm__3ymdd\",\"FormLabel\":\"filter_FormLabel__1eEjw\",\"FormInput\":\"filter_FormInput__2VLg9\",\"contactsListItem\":\"filter_contactsListItem__1R6t8\",\"deleteButton\":\"filter_deleteButton__n3KHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"toggler_themeSelector__3O5Hh\",\"switch\":\"toggler_switch__3phMo\",\"slider\":\"toggler_slider__11QUn\",\"round\":\"toggler_round__3OHfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"base_title__MksWE\"};"],"sourceRoot":""}